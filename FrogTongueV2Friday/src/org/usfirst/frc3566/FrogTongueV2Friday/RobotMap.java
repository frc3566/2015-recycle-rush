// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3566.FrogTongueV2Friday;
    
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController frogTongueSpeedController0;
    public static SpeedController frogTongueSpeedController1;
    public static RobotDrive frogTongueFrogTongueDrive01;
    public static SpeedController driveTrainSpeedController2;
    public static SpeedController driveTrainSpeedController3;
    public static RobotDrive driveTrainRobotDrive23;
    public static DigitalInput driveTrainLimitSwitch1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    //These are our variables..... really.
    public static double FROG_MOTOR_SPEED_VALUE = 1;
    public static double FROG_MOTOR_SPEED_VALUE_REVERSE = -1;

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        frogTongueSpeedController0 = new Talon(0);
        LiveWindow.addActuator("FrogTongue", "Speed Controller 0", (Talon) frogTongueSpeedController0);
        
        frogTongueSpeedController1 = new Talon(1);
        LiveWindow.addActuator("FrogTongue", "Speed Controller 1", (Talon) frogTongueSpeedController1);
        
        frogTongueFrogTongueDrive01 = new RobotDrive(frogTongueSpeedController0, frogTongueSpeedController1);
        
        frogTongueFrogTongueDrive01.setSafetyEnabled(true);
        frogTongueFrogTongueDrive01.setExpiration(0.1);
        frogTongueFrogTongueDrive01.setSensitivity(0.5);
        frogTongueFrogTongueDrive01.setMaxOutput(1.0);
        frogTongueFrogTongueDrive01.setInvertedMotor(RobotDrive.MotorType.kRearLeft, true);        

        driveTrainSpeedController2 = new Talon(2);
        LiveWindow.addActuator("DriveTrain", "Speed Controller 2", (Talon) driveTrainSpeedController2);
        
        driveTrainSpeedController3 = new Talon(3);
        LiveWindow.addActuator("DriveTrain", "Speed Controller 3", (Talon) driveTrainSpeedController3);
        
        driveTrainRobotDrive23 = new RobotDrive(driveTrainSpeedController2, driveTrainSpeedController3);
        
        driveTrainRobotDrive23.setSafetyEnabled(true);
        driveTrainRobotDrive23.setExpiration(0.1);
        driveTrainRobotDrive23.setSensitivity(0.5);
        driveTrainRobotDrive23.setMaxOutput(1.0);
        

        driveTrainLimitSwitch1 = new DigitalInput(5);
        LiveWindow.addSensor("DriveTrain", "Limit Switch 1", driveTrainLimitSwitch1);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}

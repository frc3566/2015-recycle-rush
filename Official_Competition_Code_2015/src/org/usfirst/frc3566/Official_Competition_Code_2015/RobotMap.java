// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3566.Official_Competition_Code_2015;
    

import edu.wpi.first.wpilibj.ADXL345_I2C;
import edu.wpi.first.wpilibj.ADXL345_I2C.AllAxes;
import edu.wpi.first.wpilibj.AccumulatorResult;
import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.AnalogPotentiometer;
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.CANTalon.ControlMode;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Gyro;
import edu.wpi.first.wpilibj.I2C;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.RobotDrive.MotorType;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.TalonSRX;
import edu.wpi.first.wpilibj.hal.AccelerometerJNI;
import edu.wpi.first.wpilibj.interfaces.Accelerometer;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.PowerDistributionPanel;

import java.util.Vector;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
	public static CANTalon mecanumCAN_Talon_1; //FronTRight
	public static CANTalon mecanumCAN_Talon_2; //RearRight
    public static CANTalon mecanumCAN_Talon_3; //FrontLeft
    public static CANTalon mecanumCAN_Talon_4; //RearLeft
    public static RobotDrive mecanumMecanum_Control;
    public static TalonSRX elevatorElevator_A;
    public static TalonSRX elevatorElevator_B;
    public static Gyro gyro1;
    public static PowerDistributionPanel pdp;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static AnalogInput mecanumUltrasonic;
    public static AnalogPotentiometer elevatorPositionPotentiometer;
    public static DigitalInput bottomSwitchesB1;
    public static DigitalInput bottomSwitchesB2;
    public static DigitalInput bottomSwitchesB3;
    public static DigitalInput bottomSwitchesB4;
    public static AnalogPotentiometer containerPickerPickerPotentiometer;
    public static SpeedController containerPickerPickerMotor;
    public static DigitalInput conveyorSwitchE1;
    public static DigitalInput conveyorSwitchE2;
    public static DigitalInput conveyorSwitchE3;
    public static DigitalInput conveyorSwitchE4;
    public static DigitalInput conveyorSwitchE5;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
    	/*
    	 * Initialize CANTalons
    	 */
    	pdp = new PowerDistributionPanel();
    	pdp.startLiveWindowMode();
    	LiveWindow.addActuator("PDP", "PDP", pdp);
    	
        mecanumCAN_Talon_4 = new CANTalon(4);
        mecanumCAN_Talon_4.enableControl();

        
        
        mecanumCAN_Talon_2 = new CANTalon(2);
        mecanumCAN_Talon_2.enableControl();

        
        
        mecanumCAN_Talon_3 = new CANTalon(3);
        mecanumCAN_Talon_3.enableControl();

        
        mecanumCAN_Talon_1 = new CANTalon(1);
        mecanumCAN_Talon_1.enableControl();
        
        elevatorElevator_A = new TalonSRX(0);
        LiveWindow.addActuator("Elevator", "Elevator_A", (TalonSRX) elevatorElevator_A);
        
        elevatorElevator_B = new TalonSRX(1);
        LiveWindow.addActuator("Elevator", "Elevator_B", (TalonSRX) elevatorElevator_B);
        
        
        /*
         * Initialize Mecanum drive
         */
        mecanumMecanum_Control = new RobotDrive(mecanumCAN_Talon_3, mecanumCAN_Talon_4, mecanumCAN_Talon_1, mecanumCAN_Talon_2);
        mecanumMecanum_Control.setSafetyEnabled(true);
        mecanumMecanum_Control.setExpiration(0.1);
        mecanumMecanum_Control.setSensitivity(0.5);
        mecanumMecanum_Control.setMaxOutput(1.0);
        mecanumMecanum_Control.setInvertedMotor(MotorType.kFrontLeft, true);
        mecanumMecanum_Control.setInvertedMotor(MotorType.kRearLeft, true);
        
        gyro1 = new Gyro(0);
        LiveWindow.addSensor("Gyro", "Gyro", gyro1);
       
        
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        mecanumUltrasonic = new AnalogInput(2);
        LiveWindow.addSensor("Mecanum", "Ultrasonic", mecanumUltrasonic);
        
        elevatorPositionPotentiometer = new AnalogPotentiometer(1, 12.0, 0.0);
        LiveWindow.addSensor("Elevator", "PositionPotentiometer", elevatorPositionPotentiometer);
        
        bottomSwitchesB1 = new DigitalInput(0);
        LiveWindow.addSensor("BottomSwitches", "B1", bottomSwitchesB1);
        
        bottomSwitchesB2 = new DigitalInput(1);
        LiveWindow.addSensor("BottomSwitches", "B2", bottomSwitchesB2);
        
        bottomSwitchesB3 = new DigitalInput(2);
        LiveWindow.addSensor("BottomSwitches", "B3", bottomSwitchesB3);
        
        bottomSwitchesB4 = new DigitalInput(3);
        LiveWindow.addSensor("BottomSwitches", "B4", bottomSwitchesB4);
        
        containerPickerPickerPotentiometer = new AnalogPotentiometer(3, 12.0, 0.0);
        LiveWindow.addSensor("ContainerPicker", "PickerPotentiometer", containerPickerPickerPotentiometer);
        
        containerPickerPickerMotor = new TalonSRX(2);
        LiveWindow.addActuator("ContainerPicker", "PickerMotor", (TalonSRX) containerPickerPickerMotor);
        
        conveyorSwitchE1 = new DigitalInput(4);
        LiveWindow.addSensor("ConveyorSwitch", "E1", conveyorSwitchE1);
        
        conveyorSwitchE2 = new DigitalInput(5);
        LiveWindow.addSensor("ConveyorSwitch", "E2", conveyorSwitchE2);
        
        conveyorSwitchE3 = new DigitalInput(6);
        LiveWindow.addSensor("ConveyorSwitch", "E3", conveyorSwitchE3);
        
        conveyorSwitchE4 = new DigitalInput(7);
        LiveWindow.addSensor("ConveyorSwitch", "E4", conveyorSwitchE4);
        
        conveyorSwitchE5 = new DigitalInput(8);
        LiveWindow.addSensor("ConveyorSwitch", "E5", conveyorSwitchE5);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
       
    }
}

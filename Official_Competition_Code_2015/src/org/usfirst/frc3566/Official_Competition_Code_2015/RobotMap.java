// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3566.Official_Competition_Code_2015;
    

import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.CANTalon.ControlMode;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.RobotDrive.MotorType;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.TalonSRX;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

import java.util.Vector;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
	public static CANTalon mecanumCAN_Talon_1; //FronTRight
	public static CANTalon mecanumCAN_Talon_2; //RearRight
    public static CANTalon mecanumCAN_Talon_3; //FrontLeft
    public static CANTalon mecanumCAN_Talon_4; //RearLeft
    public static RobotDrive mecanumMecanum_Control;
    public static TalonSRX elevatorElevator_A;
    public static TalonSRX elevatorElevator_B;
    public static TalonSRX containerPickerMotor_C;
    public static TalonSRX containerPickerMotor_D;
    public static TalonSRX containerPickerMotor_E;
    public static TalonSRX containerPickerMotor_F;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
    	/*
    	 * Initialize CANTalons
    	 */
        mecanumCAN_Talon_4 = new CANTalon(4);
        mecanumCAN_Talon_4.enableControl();

        
        
        mecanumCAN_Talon_2 = new CANTalon(2);
        mecanumCAN_Talon_2.enableControl();

        
        
        mecanumCAN_Talon_3 = new CANTalon(3);
        mecanumCAN_Talon_3.enableControl();

        
        mecanumCAN_Talon_1 = new CANTalon(1);
        mecanumCAN_Talon_1.enableControl();
        
        elevatorElevator_A = new TalonSRX(0);
        LiveWindow.addActuator("Elevator", "Elevator_A", (TalonSRX) elevatorElevator_A);
        
        elevatorElevator_B = new TalonSRX(1);
        LiveWindow.addActuator("Elevator", "Elevator_B", (TalonSRX) elevatorElevator_B);
        
        containerPickerMotor_C = new TalonSRX(2);
        LiveWindow.addActuator("Container", "PickerMotor_C", (TalonSRX)containerPickerMotor_C);
        
        containerPickerMotor_D = new TalonSRX(3);
        LiveWindow.addActuator("Container", "PickerMotor_D", (TalonSRX)containerPickerMotor_D);
        
        containerPickerMotor_E = new TalonSRX(4);
        LiveWindow.addActuator("Container", "PickerMotor_E", (TalonSRX)containerPickerMotor_E);
        
        containerPickerMotor_F = new TalonSRX(5);
        LiveWindow.addActuator("Container", "PickerMotor_F", (TalonSRX)containerPickerMotor_F);


        
        /*
         * Initialize Mecanum drive
         */
        mecanumMecanum_Control = new RobotDrive(mecanumCAN_Talon_3, mecanumCAN_Talon_4, mecanumCAN_Talon_1, mecanumCAN_Talon_2);
        mecanumMecanum_Control.setSafetyEnabled(true);
        mecanumMecanum_Control.setExpiration(0.1);
        mecanumMecanum_Control.setSensitivity(0.5);
        mecanumMecanum_Control.setMaxOutput(1.0);
        mecanumMecanum_Control.setInvertedMotor(MotorType.kFrontLeft, true);
        mecanumMecanum_Control.setInvertedMotor(MotorType.kRearLeft, true);
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
       
    }
}
